function scream {
  echo
  echo -e "\033[1;1m$1\033[0m"
}

function success {
  echo  -e " \033[1;32msucceeded.\033[0m"
}

function failure {
	ERR=$?
	ERRSTR=""
	if [[ $ERR != 0 ]] ; then
		ERRSTR=" (return code $ERR)"
	fi
	echo  -e " \033[1;31mfailed$ERRSTR. $@\033[0m"
}

function bail {
	ERR=$?
	ERRSTR=""
	if [[ $ERR != 0 ]] ; then
		ERRSTR=" (return code $ERR)"
	fi
	echo -e "\033[1;31mFatal error \"$@\"$ERRSTR ... Exiting.\033[0m"
  exit 1
}

function needroot {
	if [ "$EUID" -ne 0 ] ; then
		echo -e "\033[1;31mYou must be root to run $0.\033[0m"
		exit 2
	fi
}

function noroot {
	if [ "$EUID" -eq 0 ] ; then
		echo -e "\033[1;31mFor security reasons, you must not run $0 as root!\033[0m"
		exit 2
	fi
}


# globals
USER=medianet
GROUP=medianet

PREFIX=${PREFIX:-/medianet}
MEDIANETCONF="$PREFIX/config/this/medianet.conf"

CONFIG_INCLUDE=/etc/mn_config
CONF_FILE_MODHOST=/etc/mod-host.conf
CONF_FILE_MODHOST_STATE=/local/mod-host.state
CONF_FILE_ZITALRX=/etc/zita-lrx.conf
CONF_FILE_BOOT=/boot/medianet.txt
CONF_FILE_PERMISSIONS="$PREFIX"/permissions.medianet
LOCALDIRS="
/local/lib                      root            root            755
/local/lib/alsa                 root            root            755
/local/lib/dhcpcd5              root            root            755
/local/lib/resolvconf           root            root            755
/local/lib/sudo                 root            root            711
/local/lib/systemd              root            root            755
/local/cache                    root            root            755
/local/cache/lighttpd           www-data        www-data        750
/local/cache/lighttpd/uploads   www-data        www-data        750
/local/cache/lighttpd/compress  www-data        www-data        750
/local/data                     medianet        medianet        700
/local/log                      root            root            755
/local/log/lighttpd             www-data        www-data        755
"
SYSTEM_CONFIG="$PREFIX"/config/this/medianet.json
SYSTEMD_UNIT_DIR=/etc/systemd/system
SYSTEMD_UNITS_LOCAL="$PREFIX"/systemd

SYSTEMD_DEFAULT_DISABLE="
	apt-daily.timer
	apt-daily-upgrade.timer
	cpufrequtils.service
	hciuart.service
	man-db.timer
	ModemManager.service
	phpsessionclean.timer
	wifi-country.service
	wpa_supplicant.service
"
SYSTEMD_DEFAULT_ENABLE="
	systemd-time-wait-sync.service
"

SYSTEMD_DEFAULT_LINK="
	$SYSTEMD_UNITS_LOCAL/jackd.target
"

# binaries
APTGET=/usr/bin/apt-get
CAT=/bin/cat
CHOWN=/bin/chown
CHMOD=/bin/chmod
CHSH=/usr/bin/chsh
CMP=/usr/bin/cmp
CP=/bin/cp
DIRNAME=/usr/bin/dirname
DPHYSSWAPFILE=/sbin/dphys-swapfile
DPKGRECONFIGURE=/usr/sbin/dpkg-reconfigure
FIND=/usr/bin/find
GIT=/usr/bin/git
GREP=/bin/grep
GROUPADD=/usr/sbin/groupadd
HOSTNAMEBIN=/bin/hostname
INOTIFYWAIT=/usr/bin/inotifywait
IPBIN=/sbin/ip
MN_CONFIG_UPDATE=/usr/local/bin/mn_config_update
MKDIR=/bin/mkdir
MOUNT=/bin/mount
MV=/bin/mv
PASSWD=/usr/bin/passwd
READLINK=/bin/readlink
RM=/bin/rm
SED=/bin/sed
SSH=/usr/bin/ssh
SLEEP=/bin/sleep
SWAPOFF=/sbin/swapoff
SYSTEMCTL=/bin/systemctl
STAT=/usr/bin/stat
TAR=/bin/tar
TR=/usr/bin/tr
UPDATELOCALE=/usr/sbin/update-locale
USERADD=/usr/sbin/useradd
USERDEL=/usr/sbin/userdel
WGET=/usr/bin/wget
XARGS=/usr/bin/xargs

# dynamic helper variables
# don't barf if \$0 starts with dash (as for login shell)
PROGNAME=`basename -- "$0"`

# make config variables available
if [[ -f "$CONFIG_INCLUDE" ]] ; then
	. $CONFIG_INCLUDE
else
	echo "$CONFIG_INCLUDE does not exist yet - skipping."
fi

