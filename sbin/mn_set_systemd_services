#!/bin/bash

. /medianet/lib/mn_includes

. "$MEDIANETCONF"


SRCPATH=/medianet/systemd

scream "Services to disable:"

for i in $SYSTEMD_DISABLE ; do
  echo "$i: "
  sudo systemctl --quiet is-enabled 2> /dev/null && {
    echo -ne "\t disabling..."
    sudo systemctl disable "$i"  && success || failure
  } || {
    echo -e "\t already disabled."
  } 
done

scream "Services to enable:"
  
#FIXME: improve logic so that non-custom services can be enabled as well.

OLDWD=`pwd`
cd "$SRCPATH"
for i in *target ; do
  echo -n "Disabling existing `basename $i`... "
  sudo systemctl disable "$i"  && success || failure
  echo -n "Linking `basename $i`: "
  sudo systemctl link "$SRCPATH/$i" && success || failure
done
for i in *service ; do 
  echo "`basename $i`: "
  echo $SYSTEMD_ENABLE | grep $i > /dev/null && {
    sudo systemctl --quiet is-enabled "$i" 2> /dev/null && {
      echo -e "\talready enabled."
    } || {
      echo -ne "\tenabling..."
      sudo systemctl enable "$SRCPATH/$i" | tr "\n" " " && success || failure
    }
  } || {
    sudo systemctl --quiet is-active "$i" 2> /dev/null && {
      echo -ne "\tstopping..." 
      sudo systemctl stop "$i" | tr "\n" " " && success || failure
    } || echo -e "\talready stopped."
    sudo systemctl --quiet is-enabled "$SRCPATH/$i" 2> /dev/null && {
      echo -ne "\tdisabling..."
      sudo systemctl disable "$i" | tr "\n " " " && success || failure
    } || echo -e "\talready disabled."
  }
done
