#!/bin/bash

. /medianet/lib/mn_includes

. "$MEDIANETCONF"

needroot

SRCPATH=/medianet/systemd

scream "Services to disable:"

for i in $SYSTEMD_DISABLE ; do
  s=`"$SYSTEMCTL" is-enabled "$i" 2>&1`
  echo -n "$i "
  case "$s" in
    enabled)
      echo -n "disabling..."
      "$SYSTEMCTL" --quiet disable "$i"  && success || failure
      ;;
    disabled)
      echo - "already disabled."
      ;;
    *)
      echo "[$s]."
      ;;
  esac  
done

scream "Services to enable:"
  
#FIXME: improve logic so that non-custom services can be enabled as well.

OLDWD=`pwd`
cd "$SRCPATH"
for i in *target ; do
  echo -n "Disabling existing `basename $i`... "
  "$SYSTEMCTL" disable "$i"  && success || failure
  echo -n "Linking `basename $i`: "
  "$SYSTEMCTL" link "$SRCPATH/$i" && success || failure
done
for i in *service ; do 
  echo "`basename $i`: "
  echo $SYSTEMD_ENABLE | grep $i > /dev/null && {
    "$SYSTEMCTL" --quiet is-enabled "$i" 2> /dev/null && {
      echo -e "\talready enabled."
    } || {
      echo -ne "\tenabling..."
      "$SYSTEMCTL" enable "$SRCPATH/$i" | tr "\n" " " && success || failure
    }
  } || {
    "$SYSTEMCTL" --quiet is-active "$i" 2> /dev/null && {
      echo -ne "\tstopping..." 
      "$SYSTEMCTL" stop "$i" | tr "\n" " " && success || failure
    } || echo -e "\talready stopped."
    "$SYSTEMCTL" --quiet is-enabled "$SRCPATH/$i" 2> /dev/null && {
      echo -ne "\tdisabling..."
      "$SYSTEMCTL" disable "$i" | tr "\n " " " && success || failure
    } || echo -e "\talready disabled."
  }
done
